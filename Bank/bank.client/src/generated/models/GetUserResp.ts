/* tslint:disable */
/* eslint-disable */
/**
 * Bank.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetUserResp
 */
export interface GetUserResp {
    /**
     * 
     * @type {string}
     * @memberof GetUserResp
     */
    id: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetUserResp
     */
    userName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof GetUserResp
     */
    email?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetUserResp
     */
    roles?: Array<string> | null;
    /**
     * 
     * @type {Date}
     * @memberof GetUserResp
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof GetUserResp
     */
    lastLogin?: Date | null;
}

/**
 * Check if a given object implements the GetUserResp interface.
 */
export function instanceOfGetUserResp(value: object): value is GetUserResp {
    if (!('id' in value) || value['id'] === undefined) return false;
    return true;
}

export function GetUserRespFromJSON(json: any): GetUserResp {
    return GetUserRespFromJSONTyped(json, false);
}

export function GetUserRespFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUserResp {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'userName': json['userName'] == null ? undefined : json['userName'],
        'email': json['email'] == null ? undefined : json['email'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'lastLogin': json['lastLogin'] == null ? undefined : (new Date(json['lastLogin'])),
    };
}

export function GetUserRespToJSON(json: any): GetUserResp {
    return GetUserRespToJSONTyped(json, false);
}

export function GetUserRespToJSONTyped(value?: GetUserResp | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'userName': value['userName'],
        'email': value['email'],
        'roles': value['roles'],
        'createdAt': value['createdAt'] === null ? null : ((value['createdAt'] as any)?.toISOString()),
        'lastLogin': value['lastLogin'] === null ? null : ((value['lastLogin'] as any)?.toISOString()),
    };
}

